actions ::= $state_description$ "EOL" {$state_description$ "EOL"};

purpose =" An actions file starts with {\tt A} and contains
one state description for each line. This constitutes the list of states 
of the finite state machine. The initial state is the last one listed".

state_description ::= $state_id$ "\t" {$state_name$ "|"} $description$; 

purpose =" A {\tt state\_description} is 
A state id (currently a number) and a tab, followed
by an optional state name (convention is all upper case)
and a bar. It finished with a {\tt description}.".

description ::= $onEntry_part$ $onExit_part$ $internal_part$;

purpose="A {\tt description} is intended to describe the behavior
of a state. 
 Currently , the {\tt onEntry\_part} and the
{\tt onExit\_part} will always be executed exactly once.
 The {\tt onEntry\_part}  before anything, while
the {\tt onExit\_part} after anything.
The {\tt internal\_part} will only be executed after all
exiting transitions have evaluated and not fired.".

onEntry_part ::= ["OnEntry" $description_list$ "/" ] .

onExit_part ::=  ["OnExit" $description_list$ "/" ].

internal_part ::=  $description_list$ ;

purpose="All parts can be empty, but the
{\tt onExit\_part} and 
the {\tt onEntry\_part} must be terminated by {\tt /}.".

description_list ::= [{ $whiteboard_message$ ";" }+ ] [$procedure_call$ ";"];

purpose="A {\tt description\_list} could be empty. All postings
messages go before any call to a executable procedure, because for this
one there should be only one.".

whiteboard_message ::= $message_type$ {":" $message_content$};

purpose="A message will be posted to the whiteboard. The message
type is compulsory, but the content is optional; in which case
it will be considered an empty string.".

procedure_call ::=  "C++" ":" $procedure_invocation$;

purpose="A {\tt procedure\_call} is used to embed code in the finite state machine.
Currently only C++ is implemented, and the {\tt procedure\_invocation} must
be compiled with the finite state machine.".

procedure_invocation ::= $procedure_name$ [ "(" $procedure_parameter$ ")" ];

purpose="A {\tt procedure\_invocation} is used to invoke a procedure in code in the finite state machine.
Currently only C++ is implemented, and the {\tt procedure\_name} must
be a string mapped against a procedure compiled into the finite state machine".

procedure_parameter ::= $integer$ | "\"" $string$ "\"";

purpose="A {\tt procedure\_invocation} is used to invoke a procedure in code in the finite state machine.
Currently only C++ is implemented, and the {\tt procedure\_name} must
be a string mapped against a procedure compiled into the finite state machine".
