<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1220"
   version = "1.3">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "F1A517CB15C91BDC00348C25"
               BuildableName = "clfsm"
               BlueprintName = "clfsm"
               ReferencedContainer = "container:gufsm.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      enableAddressSanitizer = "YES">
      <Testables>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      enableAddressSanitizer = "YES"
      launchStyle = "0"
      useCustomWorkingDirectory = "YES"
      customWorkingDirectory = "$(SRCROOT)/../../fsms/Tutorials"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "F1A517CB15C91BDC00348C25"
            BuildableName = "clfsm"
            BlueprintName = "clfsm"
            ReferencedContainer = "container:gufsm.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
      <CommandLineArguments>
         <CommandLineArgument
            argument = "-i0"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "-L$(BUILT_PRODUCTS_DIR)"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "-L/usr/local/lib"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "-I$(SRCROOT)"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "-I$(SRCROOT)/clfsm"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "-I$(SRCROOT)/../gusimplewhiteboard"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "-I$(SRCROOT)/../../Common"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "-lclfsm"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "-t"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "LoadSuspended"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(SRCROOT)/clfsm/examples/PingPongCLFSM.machine"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(SRCROOT)/clfsm/examples/PingPongCLFSM_META.machine"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(SRCROOT)/clfsm/examples/PingPongCLFSM.machine"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(SRCROOT)/clfsm/examples/PingPongCLFSM.machine"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(SRCROOT)/clfsm/examples/PingPongCLFSM.machine"
            isEnabled = "NO">
         </CommandLineArgument>
      </CommandLineArguments>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>
