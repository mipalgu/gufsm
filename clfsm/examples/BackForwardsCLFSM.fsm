<?xml version='1.0'?>
<!DOCTYPE qfsmproject SYSTEM "qfsm.dtd">
<qfsmproject version="0.53" author="MiCASE">
  <machine nummooreout="0" transfontitalic="0" draw_it="1" statefontsize="8" transfont="Helvetica" statefontitalic="0" author="Rene Hexel" description="" version="1" name="BackForwardsCLFSM" arrowtype="1" numbits="2" statefontweight="50" statefont="Helvetica" numin="0" transfontsize="8" transfontweight="50" type="3" numout="0" initialstate="0">
    <outputnames_moore></outputnames_moore>
    <inputnames></inputnames>
    <outputnames></outputnames>
    <itransition xpos="90" ypos="90" endx="89" endy="68"/>
    <state pencolor="0" linewidth="1" finalstate="0" moore_outputs="" radius="40" xpos="89" ypos="68" code="0" description="OnEntry$&#xa;{&#x0a;  using namespace std;&#x0a;  using namespace guWhiteboard;&#x0a;&#x0a;  stateName = &quot;INIT&quot;;&#x0a;  currentState = 0;&#x0a;  cout &lt;&lt; stateName &lt;&lt; endl;&#x0a;  wb= new Whiteboard();&#x0a;&#x0a;}&#xa;$OnExit$&#xa;{&#x0a;  sleep(1); // don&#x27;t ever sleep (but this is just a test)!&#x0a;}&#xa;$Internal$&#xa;{&#x0a;  using namespace std;&#x0a;&#x0a;  cerr &lt;&lt; &quot;Internal state executed for &quot; &lt;&lt; stateName &lt;&lt; endl;&#x0a;  exit(EXIT_FAILURE);&#x0a;}&#xa;">INIT</state>
    <state pencolor="0" linewidth="1" finalstate="0" moore_outputs="" radius="40" xpos="630" ypos="79" code="1" description="OnEntry$&#xa;{&#x0a;  using namespace std;&#x0a;  using namespace guWhiteboard;&#x0a;&#x0a;  string strL = &quot;1,-50&quot;;&#x0a;  string strR = &quot;0,-50&quot;;&#x0a;  WBMsg msgL(strL);&#x0a;  WBMsg msgR(strR);&#x0a;&#x0a;  stateName = &quot;Pong&quot;;&#x0a;  currentState = 2;&#x0a;  cout &lt;&lt; stateName &lt;&lt; endl;&#x0a;  wb-&gt; addMessage(kQSay,&quot;pong is back&quot;);&#x0a;  wb-&gt; addMessage(kDifferentialMotorPower,msgL);&#x0a;  wb-&gt; addMessage(kDifferentialMotorPower,msgR);&#x0a;}&#xa;$OnExit$&#xa;{&#x0a;  sleep(3); // don&#x27;t ever sleep (but this is just a test)!&#x0a;}&#xa;$Internal$&#xa;{&#x0a;  using namespace std;&#x0a;&#x0a;  cerr &lt;&lt; &quot;Internal state executed for &quot; &lt;&lt; stateName &lt;&lt; endl;&#x0a;  exit(EXIT_FAILURE);&#x0a;}&#xa;">Pong</state>
    <state pencolor="0" linewidth="1" finalstate="0" moore_outputs="" radius="40" xpos="350" ypos="179" code="2" description="OnEntry$&#xa;{&#x0a;  using namespace std;&#x0a;  using namespace guWhiteboard;&#x0a;&#x0a;  string strL = &quot;1,60&quot;;&#x0a;  string strR = &quot;0,60&quot;;&#x0a;  WBMsg msgL(strL);&#x0a;  WBMsg msgR(strR);&#x0a;&#x0a;  stateName = &quot;Ping&quot;;&#x0a;  currentState = 1;&#x0a;  cout &lt;&lt; string( stateName ) &lt;&lt; endl;&#x0a;  wb-&gt; addMessage(kQSay,&quot;ping is forwards&quot;);&#x0a;  wb-&gt; addMessage(kDifferentialMotorPower, msgL);&#x0a;  wb-&gt; addMessage(kDifferentialMotorPower, msgR);&#x0a;}&#xa;$OnExit$&#xa;{&#x0a;  sleep(3); // don&#x27;t ever sleep (but this is just a test)!&#x0a;}&#xa;$Internal$&#xa;{&#x0a;  using namespace std;&#x0a;&#x0a;  cerr &lt;&lt; &quot;Internal state executed for &quot; &lt;&lt; stateName &lt;&lt; endl;&#x0a;  exit(EXIT_FAILURE);&#x0a;}&#xa;">Ping</state>
    <transition xpos="124" ypos="83" endx="13" endy="9" c1x="148.008" c1y="106.15" c2x="-9.04758" c2y="-16.0243" straight="0" type="2">
      <from>0</from><to>2</to>
      <inputs default="0" any="0" invert="0">true</inputs><outputs></outputs>
    </transition>
    <transition xpos="590" ypos="86" endx="89" endy="30" c1x="472.733" c1y="132.174" c2x="11.5789" c2y="-69.4461" straight="0" type="2">
      <from>1</from><to>2</to>
      <inputs default="0" any="0" invert="0">true</inputs><outputs></outputs>
    </transition>
    <transition xpos="45" ypos="-15" endx="590" endy="72" c1x="-34.0278" c1y="-128.101" c2x="461.619" c2y="21.4498" straight="0" type="2">
      <from>2</from><to>1</to>
      <inputs default="0" any="0" invert="0">true</inputs><outputs></outputs>
    </transition>
    <transition xpos="315.056" ypos="166.399" endx="55.3633" endy="20.4766" c1x="257.226" c1y="119.478" c2x="156.295" c2y="69.9771" straight="0" type="2">
      <from>2</from><to>-1</to>
      <inputs default="0" any="0" invert="0"></inputs><outputs></outputs>
    </transition>
  </machine>
</qfsmproject>
