<?xml version='1.0'?>
<!DOCTYPE qfsmproject SYSTEM 'qfsm.dtd'>
<qfsmproject version="0.53" author="Qfsm">
  <machine nummooreout="0" transfontitalic="0" draw_it="1" statefontsize="8" transfont="Helvetica" statefontitalic="0" author="Rene Hexel" description="Includes$&#xa;#include &lt;iostream>&#xa;#include &lt;Whiteboard.h>&#xa;#include &lt;WhiteboardConstants.h>&#xa;&#xa;&#xa;$Variables$&#xa;int&#x9;currentState;&#x9;// state no&#xa;guWhiteboard::Whiteboard *&#x9;wb;&#xa;" version="1" name="BackForwardsCLFSM" arrowtype="1" numbits="2" statefontweight="50" statefont="Helvetica" numin="0" transfontsize="8" transfontweight="50" type="3" numout="0" initialstate="0">
    <outputnames_moore></outputnames_moore>
    <inputnames></inputnames>
    <outputnames></outputnames>
    <itransition ypos="68" endx="49" xpos="-11" endy="68"/>
    <state pencolor="0" radius="40" description="Includes$&#xa;#include &lt;cstdlib>&#xa;#include &lt;unistd.h>&#xa;&#xa;$Variables$&#xa;const char *&#x9;stateName;&#x9;///&lt; name of the current state&#xa;&#xa;$OnEntry$&#xa;{&#xa;  using namespace std;&#xa;&#xa;  stateName = &quot;INIT&quot;;&#xa;  currentState = 0;&#xa;  cout &lt;&lt; stateName &lt;&lt; endl;&#xa;  //wb= new Whiteboard();&#xa;&#xa;}&#xa;&#xa;$OnExit$&#xa;{&#xa;  sleep(1); // don't ever sleep (but this is just a test)!&#xa;}&#xa;&#xa;$Internal$&#xa;{&#xa;  using namespace std;&#xa;&#xa;  cerr &lt;&lt; &quot;Internal state executed for &quot; &lt;&lt; stateName &lt;&lt; endl;&#xa;  exit(EXIT_FAILURE);&#xa;}&#xa;" finalstate="0" moore_outputs="" ypos="68" code="0" xpos="89" linewidth="1">INIT</state>
    <state pencolor="0" radius="40" description="Includes$&#xa;#include &lt;cstdlib>&#xa;#include &lt;unistd.h>&#xa;&#xa;$Variables$&#xa;const char *&#x9;stateName;&#x9;///&lt; name of the current state&#xa;&#xa;$OnEntry$&#xa;{&#xa;  using namespace std;&#xa;  using namespace guWhiteboard;&#xa;&#xa;  stateName = &quot;Pong&quot;;&#xa;  currentState = 2;&#xa;  cout &lt;&lt; stateName &lt;&lt; endl;&#xa;  //wb-> addMessage(kDifferentialMotorBackward,WBMsg(&quot;B,50&quot;));&#xa;  //wb-> addMessage(kDifferentialMotorBackward,WBMsg(&quot;C,50&quot;));&#xa;}&#xa;&#xa;$OnExit$&#xa;{&#xa;  sleep(1); // don't ever sleep (but this is just a test)!&#xa;}&#xa;&#xa;$Internal$&#xa;{&#xa;  using namespace std;&#xa;&#xa;  cerr &lt;&lt; &quot;Internal state executed for &quot; &lt;&lt; stateName &lt;&lt; endl;&#xa;  exit(EXIT_FAILURE);&#xa;}&#xa;" finalstate="0" moore_outputs="" ypos="79" code="1" xpos="630" linewidth="1">Pong</state>
    <state pencolor="0" radius="40" description="Includes$&#xa;#include &lt;cstdlib>&#xa;#include &lt;unistd.h>&#xa;&#xa;$Variables$&#xa;const char *&#x9;stateName;&#x9;///&lt; name of the current state&#xa;&#xa;$OnEntry$&#xa;{&#xa;  using namespace std;&#xa;  using namespace guWhiteboard;&#xa;&#xa;  stateName = &quot;Ping&quot;;&#xa;  currentState = 1;&#xa;  cout &lt;&lt; stateName &lt;&lt; endl;&#xa;  //wb-> addMessage(kDifferentialMotorForward,WBMsg(&quot;B,50&quot;));&#xa;  //wb-> addMessage(kDifferentialMotorForward,WBMsg(&quot;C,50&quot;));&#xa;}&#xa;&#xa;$OnExit$&#xa;{&#xa;  sleep(1); // don't ever sleep (but this is just a test)!&#xa;}&#xa;&#xa;$Internal$&#xa;{&#xa;  using namespace std;&#xa;&#xa;  cerr &lt;&lt; &quot;Internal state executed for &quot; &lt;&lt; stateName &lt;&lt; endl;&#xa;  exit(EXIT_FAILURE);&#xa;}&#xa;" finalstate="0" moore_outputs="" ypos="184" code="2" xpos="349" linewidth="1">Ping</state>
    <transition c1x="187.843083" c2y="139.900778" c1y="112.099222" description="" straight="1" type="2" ypos="84.29766537162109" endx="312.4707500291252" xpos="125.5292499708749" endy="167.7023346283789" c2x="250.156917">
      <from>0</from>
      <to>2</to>
      <inputs default="0" any="0" invert="0">true</inputs>
      <outputs></outputs>
    </transition>
    <transition c1x="563.988170" c2y="209.239410" c1y="101.753026" description="" straight="0" type="2" ypos="86.29018742253695" endx="388.6196909271101" xpos="590.669945749538" endy="189.5027348509875" c2x="418.810731">
      <from>1</from>
      <to>2</to>
      <inputs default="0" any="0" invert="0">true</inputs>
      <outputs></outputs>
    </transition>
    <transition c1x="399.930675" c2y="61.263325" c1y="132.455716" description="" straight="0" type="2" ypos="144.2087424555579" endx="590.5484472986118" xpos="344.9188453800572" endy="72.39886453331013" c2x="552.808960">
      <from>2</from>
      <to>1</to>
      <inputs default="0" any="0" invert="0">true</inputs>
      <outputs></outputs>
    </transition>
  </machine>
</qfsmproject>
