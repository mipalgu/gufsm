// Generated by CLMetaGen. Do not modify.
#include "CLMetaState"
#include "Machine_Header_Test.h"
using namespace std;
using namespace FSM;
using namespace CLReflect;
using namespace PingPongCLFSM_META_namespace;
extern "C"
{
	CLMetaMachine* FSM::PingPongCLFSM_META_namespace::Create()
	{
		CLMetaMachine* meta = new CLMetaMachine("PingPongCLFSM_META", "PingPongCLFSM_META");
		
		// Machine properties
		shared_ptr<Meta_Machine_currentState> property_0(new Meta_Machine_currentState());
		meta->addProperty(property_0);
		
		// State creation
		// State: Ping
		shared_ptr<CLMetaState> state_0(new CLMetaState("Ping"));
		shared_ptr<Meta_Ping_stateName> ping_property_0(new Meta_Ping_stateName());
		state_0->addProperty(ping_property_0);
		meta->addState(state_0);
		
		// State: Pong
		shared_ptr<CLMetaState> state_1(new CLMetaState("Pong"));
		shared_ptr<Meta_Pong_stateName> pong_property_0(new Meta_Pong_stateName());
		state_1->addProperty(pong_property_0);
		meta->addState(state_1);
		
		return meta;
	}
}
